{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\courtney\\\\Desktop\\\\3-React\\\\nucampsite\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\n//import { Reducer, initialState } from './reducer';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form'; //import { createStore, combineReducers } from 'redux';\n\nimport { Campsites } from './campsites';\nimport { Comments } from './comments';\nimport { Partners } from './partners';\nimport { Promotions } from './promotions';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialFeedback } from './forms';\nexport const ConfigureStore = () => {\n  const store = createStore(combineReducers(_objectSpread({\n    campsites: Campsites,\n    comments: Comments,\n    partners: Partners,\n    promotions: Promotions\n  }, createForms({\n    feedbackForm: InitialFeedback\n  }))), applyMiddleware(thunk, logger));\n  return store;\n};","map":{"version":3,"sources":["C:/Users/courtney/Desktop/3-React/nucampsite/src/redux/configureStore.js"],"names":["createStore","combineReducers","applyMiddleware","createForms","Campsites","Comments","Partners","Promotions","thunk","logger","InitialFeedback","ConfigureStore","store","campsites","comments","partners","promotions","feedbackForm"],"mappings":";AAAA;AACA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA6D,OAA7D;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CACA;;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,eAAT,QAAgC,SAAhC;AAGA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChC,QAAMC,KAAK,GAAGZ,WAAW,CACrBC,eAAe;AACXY,IAAAA,SAAS,EAAET,SADA;AAEXU,IAAAA,QAAQ,EAAET,QAFC;AAGXU,IAAAA,QAAQ,EAAET,QAHC;AAIXU,IAAAA,UAAU,EAAET;AAJD,KAKRJ,WAAW,CAAC;AACXc,IAAAA,YAAY,EAAEP;AADH,GAAD,CALH,EADM,EAUrBR,eAAe,CAACM,KAAD,EAAQC,MAAR,CAVM,CAAzB;AAeA,SAAOG,KAAP;AACH,CAjBM","sourcesContent":["//import { Reducer, initialState } from './reducer';\r\nimport {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\n//import { createStore, combineReducers } from 'redux';\r\nimport { Campsites } from './campsites';\r\nimport { Comments } from './comments';\r\nimport { Partners } from './partners';\r\nimport { Promotions } from './promotions';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            campsites: Campsites,\r\n            comments: Comments,\r\n            partners: Partners,\r\n            promotions: Promotions,\r\n            ...createForms({\r\n                feedbackForm: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n\r\n    );\r\n\r\n\r\n    return store;\r\n};"]},"metadata":{},"sourceType":"module"}