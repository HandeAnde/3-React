{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\nexport const fetchCampsites = () => dispatch => {\n  dispatch(campsitesLoading());\n  return fetch(baseUrl + 'campsites').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      const error = new Error(`Error ${response.status}: ${response.statusText}`);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    const errMess = new Error(error.message);\n    throw errMess;\n  }).then(response => response.json()).then(campsites => dispatch(addCampsites(campsites))).catch(error => dispatch(campsitesFailed(error.message)));\n};\nexport const campsitesLoading = () => ({\n  type: ActionTypes.CAMPSITES_LOADING\n});\nexport const campsitesFailed = errMess => ({\n  type: ActionTypes.CAMPSITES_FAILED,\n  payload: errMess\n});\nexport const addCampsites = campsites => ({\n  type: ActionTypes.ADD_CAMPSITES,\n  payload: campsites\n});\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + 'comments').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      const error = new Error(`Error ${response.status}: ${response.statusText}`);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errMess = new Error(error.message);\n    throw errMess;\n  }).then(response => response.json()).then(comments => dispatch(addComments(comments))).catch(error => dispatch(commentsFailed(error.message)));\n};\nexport const commentsFailed = errMess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errMess\n});\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\nexport const addComment = comment => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: comment\n});\nexport const postComment = (campsiteId, rating, author, text) => dispatch => {\n  const newComment = {\n    campsiteId: campsiteId,\n    rating: rating,\n    author: author,\n    text: text\n  };\n  newComment.date = new Date().toISOString();\n  return fetch(baseUrl + 'comments', {\n    method: 'POST',\n    body: JSON.stringify(newComment),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      const error = new Error(`Error ${response.status}: ${response.statusText}`);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => dispatch(addComment(response))).catch(error => {\n    console.log('post comment', error.message);\n    alert('Your comment could not be posted\\nError: ' + error.message);\n  });\n};\nexport const fetchPromotions = () => dispatch => {\n  dispatch(promotionsLoading());\n  return fetch(baseUrl + 'promotions').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      const error = new Error(`Error ${response.status}: ${response.statusText}`);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    const errMess = new Error(error.message);\n    throw errMess;\n  }).then(response => response.json()).then(promotions => dispatch(addPromotions(promotions))).catch(error => dispatch(promotionsFailed(error.message)));\n};\nexport const promotionsLoading = () => ({\n  type: ActionTypes.PROMOTIONS_LOADING\n});\nexport const promotionsFailed = errMess => ({\n  type: ActionTypes.PROMOTIONS_FAILED,\n  payload: errMess\n});\nexport const addPromotions = promotions => ({\n  type: ActionTypes.ADD_PROMOTIONS,\n  payload: promotions\n});\nexport const fetchPartners = () => dispatch => {\n  dispatch(PartnersLoading());\n  return fetch(baseUrl + 'Partners').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      const error = new Error(`Error ${response.status}: ${response.statusText}`);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    const errMess = new Error(error.message);\n    throw errMess;\n  }).then(response => response.json()).then(Partners => dispatch(addPartners(Partners))).catch(error => dispatch(PartnersFailed(error.message)));\n};\nexport const PartnersLoading = () => ({\n  type: ActionTypes.Partners_LOADING\n});\nexport const PartnersFailed = errMess => ({\n  type: ActionTypes.Partners_FAILED,\n  payload: errMess\n});\nexport const addPartners = Partners => ({\n  type: ActionTypes.ADD_Partners,\n  payload: Partners\n});","map":{"version":3,"sources":["C:/Users/courtney/Desktop/3-React/nucampsite/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","fetchCampsites","dispatch","campsitesLoading","fetch","then","response","ok","error","Error","status","statusText","errMess","message","json","campsites","addCampsites","catch","campsitesFailed","type","CAMPSITES_LOADING","CAMPSITES_FAILED","payload","ADD_CAMPSITES","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","addComment","comment","ADD_COMMENT","postComment","campsiteId","rating","author","text","newComment","date","Date","toISOString","method","body","JSON","stringify","headers","console","log","alert","fetchPromotions","promotionsLoading","promotions","addPromotions","promotionsFailed","PROMOTIONS_LOADING","PROMOTIONS_FAILED","ADD_PROMOTIONS","fetchPartners","PartnersLoading","Partners","addPartners","PartnersFailed","Partners_LOADING","Partners_FAILED","ADD_Partners"],"mappings":"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","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const fetchCampsites = () => (dispatch) => {\r\n\tdispatch(campsitesLoading());\r\n\r\n\treturn fetch(baseUrl + 'campsites')\r\n\t\t.then(\r\n\t\t\t(response) => {\r\n\t\t\t\tif (response.ok) {\r\n\t\t\t\t\treturn response;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n\t\t\t\t\terror.response = response;\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\tconst errMess = new Error(error.message);\r\n\t\t\t\tthrow errMess;\r\n\t\t\t}\r\n\t\t)\r\n\t\t.then((response) => response.json())\r\n\t\t.then((campsites) => dispatch(addCampsites(campsites)))\r\n\t\t.catch((error) => dispatch(campsitesFailed(error.message)));\r\n};\r\n\r\nexport const campsitesLoading = () => ({\r\n\ttype: ActionTypes.CAMPSITES_LOADING\r\n});\r\n\r\nexport const campsitesFailed = (errMess) => ({\r\n\ttype: ActionTypes.CAMPSITES_FAILED,\r\n\tpayload: errMess\r\n});\r\n\r\nexport const addCampsites = (campsites) => ({\r\n\ttype: ActionTypes.ADD_CAMPSITES,\r\n\tpayload: campsites\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n\treturn fetch(baseUrl + 'comments')\r\n\t\t.then(\r\n\t\t\t(response) => {\r\n\t\t\t\tif (response.ok) {\r\n\t\t\t\t\treturn response;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n\t\t\t\t\terror.response = response;\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\tvar errMess = new Error(error.message);\r\n\t\t\t\tthrow errMess;\r\n\t\t\t}\r\n\t\t)\r\n\t\t.then((response) => response.json())\r\n\t\t.then((comments) => dispatch(addComments(comments)))\r\n\t\t.catch((error) => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errMess) => ({\r\n\ttype: ActionTypes.COMMENTS_FAILED,\r\n\tpayload: errMess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n\ttype: ActionTypes.ADD_COMMENTS,\r\n\tpayload: comments\r\n});\r\n\r\nexport const addComment = (comment) => ({\r\n\ttype: ActionTypes.ADD_COMMENT,\r\n\tpayload: comment\r\n});\r\n\r\nexport const postComment = (campsiteId, rating, author, text) => (dispatch) => {\r\n\tconst newComment = {\r\n\t\tcampsiteId: campsiteId,\r\n\t\trating: rating,\r\n\t\tauthor: author,\r\n\t\ttext: text\r\n\t};\r\n\tnewComment.date = new Date().toISOString();\r\n\r\n\treturn fetch(baseUrl + 'comments', {\r\n\t\tmethod: 'POST',\r\n\t\tbody: JSON.stringify(newComment),\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t}\r\n\t})\r\n\t\t.then(\r\n\t\t\t(response) => {\r\n\t\t\t\tif (response.ok) {\r\n\t\t\t\t\treturn response;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n\t\t\t\t\terror.response = response;\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t)\r\n\t\t.then((response) => response.json())\r\n\t\t.then((response) => dispatch(addComment(response)))\r\n\t\t.catch((error) => {\r\n\t\t\tconsole.log('post comment', error.message);\r\n\t\t\talert('Your comment could not be posted\\nError: ' + error.message);\r\n\t\t});\r\n};\r\n\r\nexport const fetchPromotions = () => (dispatch) => {\r\n\tdispatch(promotionsLoading());\r\n\r\n\treturn fetch(baseUrl + 'promotions')\r\n\t\t.then(\r\n\t\t\t(response) => {\r\n\t\t\t\tif (response.ok) {\r\n\t\t\t\t\treturn response;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n\t\t\t\t\terror.response = response;\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\tconst errMess = new Error(error.message);\r\n\t\t\t\tthrow errMess;\r\n\t\t\t}\r\n\t\t)\r\n\t\t.then((response) => response.json())\r\n\t\t.then((promotions) => dispatch(addPromotions(promotions)))\r\n\t\t.catch((error) => dispatch(promotionsFailed(error.message)));\r\n};\r\n\r\nexport const promotionsLoading = () => ({\r\n\ttype: ActionTypes.PROMOTIONS_LOADING\r\n});\r\n\r\nexport const promotionsFailed = (errMess) => ({\r\n\ttype: ActionTypes.PROMOTIONS_FAILED,\r\n\tpayload: errMess\r\n});\r\n\r\nexport const addPromotions = (promotions) => ({\r\n\ttype: ActionTypes.ADD_PROMOTIONS,\r\n\tpayload: promotions\r\n});\r\n\r\nexport const fetchPartners = () => (dispatch) => {\r\n\tdispatch(PartnersLoading());\r\n\r\n\treturn fetch(baseUrl + 'Partners')\r\n\t\t.then(\r\n\t\t\t(response) => {\r\n\t\t\t\tif (response.ok) {\r\n\t\t\t\t\treturn response;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n\t\t\t\t\terror.response = response;\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\tconst errMess = new Error(error.message);\r\n\t\t\t\tthrow errMess;\r\n\t\t\t}\r\n\t\t)\r\n\t\t.then((response) => response.json())\r\n\t\t.then((Partners) => dispatch(addPartners(Partners)))\r\n\t\t.catch((error) => dispatch(PartnersFailed(error.message)));\r\n};\r\n\r\nexport const PartnersLoading = () => ({\r\n\ttype: ActionTypes.Partners_LOADING\r\n});\r\n\r\nexport const PartnersFailed = (errMess) => ({\r\n\ttype: ActionTypes.Partners_FAILED,\r\n\tpayload: errMess\r\n});\r\n\r\nexport const addPartners = (Partners) => ({\r\n\ttype: ActionTypes.ADD_Partners,\r\n\tpayload: Partners\r\n});\r\n"]},"metadata":{},"sourceType":"module"}