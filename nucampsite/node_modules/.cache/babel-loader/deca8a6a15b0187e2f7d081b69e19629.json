{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\nexport const addComment = comment => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: comment\n});\nexport const postComment = (campsiteId, rating, author, text) => dispatch => {\n  const newComment = {\n    campsiteId: campsiteId,\n    rating: rating,\n    author: author,\n    text: text\n  };\n  newComment.date = new Date().toISOString();\n  return fetch(baseUrl + 'comments', {\n    method: 'POST',\n    body: JSON.stringify(newComment),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      const error = new Error(`Error ${response.status}: ${response.statusText}`);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => dispatch(addComment(response))).catch(error => {\n    console.log('post comment', error.message);\n    alert('Your comment could not be posted\\nError: ' + error.message);\n  });\n};\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + 'comments').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      const error = new Error(`Error ${response.status}: ${response.statusText}`);\n      throw error;\n    }\n  }, error => {\n    var errMess = new Error(error.message);\n    throw errMess;\n  }).then(response => response.json()).then(comments => dispatch(addComments(comments))).catch(error => dispatch(commentsFailed(error.message)));\n};\nexport const commentsFailed = errMess => ({\n  type: ActionTypes.CAMPSITES_FAILED,\n  payload: errMess\n});\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\nexport const fetchPromotions = () => dispatch => {\n  dispatch(promotionsLoading());\n  return fetch(baseUrl + 'promotions').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      const error = new Error(`Error ${response.status}: ${response.statusText}`);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    const errMess = new Error(error.message);\n    throw errMess;\n  }).then(response => response.json()).then(promotions => dispatch(addPromotions(promotions))).catch(error => dispatch(promotionsFailed(error.message)));\n};\nexport const promotionsLoading = () => ({\n  type: ActionTypes.PROMOTIONS_LOADING\n});\nexport const promotionsFailed = errMess => ({\n  type: ActionTypes.PROMOTIONS_FAILED,\n  payload: errMess\n});\nexport const addPromotions = promotions => ({\n  type: ActionTypes.ADD_PROMOTIONS,\n  payload: promotions\n});\nexport const fetchCampsites = () => dispatch => {\n  dispatch(campsitesLoading());\n  return fetch(baseUrl + 'campsites').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      const error = new Error(`Error ${response.status}: ${response.statusText}`);\n      throw error;\n    }\n  }, error => {\n    const errMess = new Error(error.message);\n    throw errMess;\n  }).then(response => response.json()).then(campsites => dispatch(addCampsites(campsites))).catch(error => dispatch(campsitesFailed(error.message)));\n};\nexport const campsitesLoading = () => ({\n  type: ActionTypes.CAMPSITES_LOADING\n});\nexport const campsitesFailed = errMess => ({\n  type: ActionTypes.CAMPSITES_FAILED,\n  payload: errMess\n});\nexport const addCampsites = campsites => ({\n  type: ActionTypes.ADD_CAMPSITES,\n  payload: campsites\n});\n/*********************************************/\n\nexport const fetchPartners = () => dispatch => {\n  dispatch(partnersLoading());\n  return fetch(baseUrl + 'partners').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      const error = new Error(`Error ${response.status}: ${response.statusText}`);\n      throw error;\n    }\n  }, error => {\n    const errMess = new Error(error.message);\n    throw errMess;\n  }).then(response => response.json()).then(partners => dispatch(addPartners(partners))).catch(error => dispatch(partnersFailed(error.message)));\n};\nexport const partnersLoading = () => ({\n  type: ActionTypes.PARTNERS_LOADING\n});\nexport const partnersFailed = errMess => ({\n  type: ActionTypes.PARTNERS_FAILED,\n  payload: errMess\n});\nexport const addPartners = partners => ({\n  type: ActionTypes.ADD_PARTNERS,\n  payload: partners\n});","map":{"version":3,"sources":["C:/Users/courtney/Desktop/3-React/nucampsite/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","addComment","comment","type","ADD_COMMENT","payload","postComment","campsiteId","rating","author","text","dispatch","newComment","date","Date","toISOString","fetch","method","body","JSON","stringify","headers","then","response","ok","error","Error","status","statusText","json","catch","console","log","message","alert","fetchComments","errMess","comments","addComments","commentsFailed","CAMPSITES_FAILED","ADD_COMMENTS","fetchPromotions","promotionsLoading","promotions","addPromotions","promotionsFailed","PROMOTIONS_LOADING","PROMOTIONS_FAILED","ADD_PROMOTIONS","fetchCampsites","campsitesLoading","campsites","addCampsites","campsitesFailed","CAMPSITES_LOADING","ADD_CAMPSITES","fetchPartners","partnersLoading","partners","addPartners","partnersFailed","PARTNERS_LOADING","PARTNERS_FAILED","ADD_PARTNERS"],"mappings":"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","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = comment => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (campsiteId, rating, author, text) => dispatch => {\r\n    const newComment = {\r\n        campsiteId: campsiteId,\r\n        rating: rating,\r\n        author: author,\r\n        text: text\r\n    };\r\n\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                const error = new Error(`Error ${response.status}: ${response.statusText}`)\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => { throw error; })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => {\r\n            console.log('post comment', error.message);\r\n            alert('Your comment could not be posted\\nError: ' + error.message);\r\n        });\r\n\r\n};\r\n\r\nexport const fetchComments = () => dispatch => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                const error = new Error(`Error ${response.status}: ${response.statusText}`)\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errMess = new Error(error.message);\r\n                throw errMess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const commentsFailed = errMess => ({\r\n    type: ActionTypes.CAMPSITES_FAILED,\r\n    payload: errMess\r\n});\r\n\r\nexport const addComments = comments => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n})\r\n\r\nexport const fetchPromotions = () => dispatch => {\r\n    dispatch(promotionsLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                const error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                const errMess = new Error(error.message);\r\n                throw errMess;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(promotions => dispatch(addPromotions(promotions)))\r\n        .catch(error => dispatch(promotionsFailed(error.message)))\r\n}\r\n\r\nexport const promotionsLoading = () => ({\r\n    type: ActionTypes.PROMOTIONS_LOADING\r\n});\r\n\r\nexport const promotionsFailed = errMess => ({\r\n    type: ActionTypes.PROMOTIONS_FAILED,\r\n    payload: errMess\r\n});\r\n\r\nexport const addPromotions = promotions => ({\r\n    type: ActionTypes.ADD_PROMOTIONS,\r\n    payload: promotions\r\n});\r\n\r\nexport const fetchCampsites = () => dispatch => {\r\n    dispatch(campsitesLoading());\r\n\r\n    return fetch(baseUrl + 'campsites')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                const error = new Error(`Error ${response.status}: ${response.statusText}`)\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                const errMess = new Error(error.message);\r\n                throw errMess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(campsites => dispatch(addCampsites(campsites)))\r\n        .catch(error => dispatch(campsitesFailed(error.message)));\r\n};\r\n\r\n\r\n\r\nexport const campsitesLoading = () => ({\r\n    type: ActionTypes.CAMPSITES_LOADING\r\n});\r\n\r\nexport const campsitesFailed = errMess => ({\r\n    type: ActionTypes.CAMPSITES_FAILED,\r\n    payload: errMess\r\n});\r\n\r\nexport const addCampsites = campsites => ({\r\n    type: ActionTypes.ADD_CAMPSITES,\r\n    payload: campsites\r\n});\r\n/*********************************************/\r\n\r\n\r\n\r\n\r\nexport const fetchPartners = () => dispatch => {\r\n    dispatch(partnersLoading());\r\n\r\n    return fetch(baseUrl + 'partners')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                const error = new Error(`Error ${response.status}: ${response.statusText}`)\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                const errMess = new Error(error.message);\r\n                throw errMess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(partners => dispatch(addPartners(partners)))\r\n        .catch(error => dispatch(partnersFailed(error.message)));\r\n};\r\n\r\n\r\nexport const partnersLoading = () => ({\r\n    type: ActionTypes.PARTNERS_LOADING\r\n});\r\n\r\nexport const partnersFailed = errMess => ({\r\n    type: ActionTypes.PARTNERS_FAILED,\r\n    payload: errMess\r\n});\r\n\r\nexport const addPartners = partners => ({\r\n    type: ActionTypes.ADD_PARTNERS,\r\n    payload: partners\r\n});\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}