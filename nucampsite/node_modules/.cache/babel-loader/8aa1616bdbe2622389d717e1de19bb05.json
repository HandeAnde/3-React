{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\courtney\\\\Desktop\\\\3-React\\\\nucampsite\\\\src\\\\components\\\\CampsiteInfoComponent.js\";\nimport React, { Component } from 'react';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\nimport { Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Label } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nconst required = val => val && val.length;\n\nconst maxLength = len => val => !val || val.length <= len;\n\nconst minLength = len => val => val && val.length >= len;\n\nfunction RenderCampsite({\n  campsite\n}) {\n  return React.createElement(\"div\", {\n    className: \"col-md-5 m-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(FadeTransform, {\n    in: true,\n    transformProps: {\n      exitTransform: 'scale(0.5) translateY(-50%)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(CardImg, {\n    top: true,\n    src: baseUrl + campsite.image,\n    alt: campsite.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, campsite.description)))));\n}\n\nfunction RenderComments({\n  comments,\n  postComment,\n  campsiteId\n}) {\n  if (comments) {\n    return React.createElement(\"div\", {\n      className: \"col-md-5 m-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Comments\"), React.createElement(Stagger, {\n      in: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, comments.map(comment => {\n      return React.createElement(Fade, {\n        in: true,\n        key: comment.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, comment.text, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), \"-- \", comment.author, \", \", new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: '2-digit'\n      }).format(new Date(Date.parse(comment.date))))));\n    })), React.createElement(CommentForm, {\n      campsiteId: campsiteId,\n      postComment: postComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }));\n  }\n}\n\nfunction CampsiteInfo(props) {\n  if (props.isLoading) {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })));\n  }\n\n  if (props.errMess) {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, props.errMess))));\n  }\n\n  if (typeof props.campsite !== 'undefined' && props.campsite !== null) {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Breadcrumb, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(BreadcrumbItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \">\", React.createElement(Link, {\n      to: \"/directory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Directory\"), \" \"), React.createElement(BreadcrumbItem, {\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, props.campsite.name)), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, props.campsite.name), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(RenderCampsite, {\n      campsite: props.campsite,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(RenderComments, {\n      comments: props.comments,\n      postComment: props.postComment,\n      campsiteId: props.campsite.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"  \");\n  }\n}\n\nclass CommentForm extends Component {\n  //state={show: true}\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false,\n      rating: '',\n      author: '',\n      text: '',\n      touched: {\n        author: false\n      }\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n  /*  showModal = () => {\r\n       this.setState({ show: true });\r\n     };\r\n   \r\n     hideModal = () => {\r\n       this.setState({ show: false });\r\n     }; */\n\n\n  handleSubmit(values\n  /*event*/\n  ) {\n    /* console.log('Current state is: ' + JSON.stringify(this.state));\r\n    alert('Current state is: ' + JSON.stringify(this.state)); */\n    this.toggleModal();\n    this.props.postComment(this.props.campsiteId, values.rating, values.author, values.text); //console.log('Current state is: ' + JSON.stringify(values));\n    //alert('Current state is: ' + JSON.stringify(values));\n    //event.preventDefault(); // react-redux will handle this\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Button, {\n      outline: true,\n      onClick: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Submit Comment\"), React.createElement(Modal, {\n      isOpen: this.state.isModalOpen,\n      toggle: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-pencil fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), \" Submit Comment\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(LocalForm, {\n      onSubmit: values => this.handleSubmit(values),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"rating\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Rating\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(Control.select, {\n      model: \".rating\",\n      name: \"rating\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"4\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"5\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(Control.text, {\n      model: \".author\",\n      id: \"author\",\n      name: \"author\",\n      placeholder: \"Your Name\",\n      className: \"form-control\",\n      validators: {\n        required,\n        minLength: minLength(2),\n        maxLength: maxLength(15)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".author\",\n      show: \"touched\",\n      component: \"div\",\n      messages: {\n        required: 'Required',\n        minLength: 'Must be at least 2 characters',\n        maxLength: 'Must be 15 characters or less'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Comments\"), React.createElement(Control.text, {\n      model: \".text\",\n      className: \"form-control\",\n      id: \"text\",\n      name: \"text\",\n      rows: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      value: \"submit\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"Submit\"))))));\n  }\n\n}\n\nexport default CampsiteInfo;","map":{"version":3,"sources":["C:/Users/courtney/Desktop/3-React/nucampsite/src/components/CampsiteInfoComponent.js"],"names":["React","Component","FadeTransform","Fade","Stagger","Card","CardImg","CardText","CardBody","Breadcrumb","BreadcrumbItem","Button","Modal","ModalHeader","ModalBody","Label","Link","Control","LocalForm","Errors","Loading","baseUrl","required","val","length","maxLength","len","minLength","RenderCampsite","campsite","exitTransform","image","name","description","RenderComments","comments","postComment","campsiteId","map","comment","id","text","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CampsiteInfo","props","isLoading","errMess","CommentForm","constructor","state","isModalOpen","rating","touched","toggleModal","bind","handleSubmit","setState","values","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nimport {\r\n    Card, CardImg,  CardText\r\n    , CardBody,  Breadcrumb, BreadcrumbItem, Button\r\n    , Modal, ModalHeader, ModalBody,\r\n      Label} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || (val.length <= len);\r\nconst minLength = len => val => val && (val.length >= len);\r\n\r\n\r\n\r\nfunction RenderCampsite({ campsite }) {\r\n    return (\r\n        <div className=\"col-md-5 m-1\">\r\n           <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg top src={baseUrl + campsite.image} alt={campsite.name} />\r\n                    <CardBody>\r\n                        <CardText>{campsite.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RenderComments({ comments, postComment, campsiteId }) {\r\n    if (comments) {\r\n        return (\r\n            <div className=\"col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <Stagger in>\r\n                    {comments.map(comment => {\r\n                        return (\r\n                            <Fade in key={comment.id}>\r\n                                <div>\r\n                                    <p>{comment.text}<br />\r\n                                        -- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}\r\n                                    </p>\r\n                                </div>\r\n                            </Fade>\r\n                        );\r\n                    })}\r\n                </Stagger>\r\n                {/*{<CommentForm />}*/}\r\n                <CommentForm campsiteId={campsiteId} postComment={postComment} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction CampsiteInfo(props) {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (typeof props.campsite !== 'undefined' && props.campsite !== null) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem>><Link to=\"/directory\">Directory</Link> </BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <h2>{props.campsite.name}</h2>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderCampsite campsite={props.campsite} />\r\n                    <RenderComments\r\n                        comments={props.comments}\r\n                        postComment={props.postComment}\r\n                        campsiteId={props.campsite.id}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (<div>  </div>);\r\n    }\r\n}\r\nclass CommentForm extends Component {\r\n\r\n    //state={show: true}\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false,\r\n            rating: '',\r\n            author: '',\r\n            text: '',\r\n            touched: {\r\n                author: false\r\n            }\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    /*  showModal = () => {\r\n         this.setState({ show: true });\r\n       };\r\n     \r\n       hideModal = () => {\r\n         this.setState({ show: false });\r\n       }; */\r\n\r\n    handleSubmit(values/*event*/) {\r\n        /* console.log('Current state is: ' + JSON.stringify(this.state));\r\n        alert('Current state is: ' + JSON.stringify(this.state)); */\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.campsiteId, values.rating, values.author, values.text);\r\n        //console.log('Current state is: ' + JSON.stringify(values));\r\n        //alert('Current state is: ' + JSON.stringify(values));\r\n        //event.preventDefault(); // react-redux will handle this\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Button outline onClick={this.toggleModal}>Submit Comment</Button>\r\n\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        <i className=\"fa fa-pencil fa-lg\" /> Submit Comment\r\n                        </ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" >Rating</Label><br />\r\n                                <Control.select model=\".rating\" name=\"rating\">\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                </Control.select><br />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"author\">First Name</Label>\r\n\r\n                                <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                    placeholder=\"Your Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required,\r\n                                        minLength: minLength(2),\r\n                                        maxLength: maxLength(15)\r\n                                    }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".author\"\r\n                                    show=\"touched\"\r\n                                    component=\"div\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be at least 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"text\">Comments</Label>\r\n\r\n                                <Control.text model=\".text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"text\"\r\n                                    name=\"text\"\r\n                                    rows=\"6\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                            </div>\r\n\r\n                            {/*<Row className=\"form-group\">\r\n\r\n                                <Col md={10}>\r\n                                    <Label htmlFor=\"rating\" md={2}>Rating</Label>\r\n                                    <Control.select model=\".rating\" id=\".rating\">\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                    </Control.select>\r\n                                    <Label htmlFor=\"firstName\" md={2}>First Name</Label>\r\n\r\n                                    <Control.text model=\".author\" id=\"firstName\" name=\"author\"\r\n                                        placeholder=\"Your Namee\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstName\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                    <Label htmlFor=\"text\" md={2}>Comments</Label>\r\n                                    <Control.text model=\".text\" id=\"text\" rows=\"6\" />\r\n                                    <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                                </Col>\r\n                                    </Row>*/}\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default CampsiteInfo;"]},"metadata":{},"sourceType":"module"}